version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant 
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    ports:
      - 6333:6333 # tcp
      - 6334:6334 # grpc
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - db
    restart: always
  prometheus:
    image: prom/prometheus:v2.40.4
    ports:
      - 9090:9090
    networks:
      - monitoring
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - 3000:3000 
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana

  backend:
    image: siddhantprateek/qdapi:latest
    container_name: qdapi
    environment:
      QDRANT_ADDR: qdrant:6334
      PORT: 80
    ports:
      - 80:80
    depends_on:
      - qdrant
    networks:
      - db
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  


volumes:
  qdrant_data:
  grafana_data:

networks:
  monitoring:
  db: